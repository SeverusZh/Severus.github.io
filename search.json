[{"title":"Github Pages上图片显示问题和添加评论","date":"2024-09-09T16:33:35.000Z","url":"/SeverusBlog/2024/09/10/Github-Pages%E4%B8%8A%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98%E4%BF%AE%E5%A4%8D%E5%92%8C%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA/","tags":[["博客搭建","/SeverusBlog/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"]],"categories":[[" ",""]],"content":"把博客发布到Pages上后，遗憾地发现图片又不能显示了…重新看了下index.html，又是路径的锅。 脚本处理有两种处理思路，一种是修改index.html然后再提交到仓库，但是一来处理量大，二来有些地方匹配不到 image，因为直接把相对路径转化了。所以我选择处理自己的markdown文件，格式整齐，处理量小。 这里匹配 image并替换，deploy后再替换回来，编辑上就不会有问题了。 如你所见，这是个python程序，需要有python环境才能运行。 添加评论主要是发现主题有这个配置选项，顺便就加上吧。 这里选择的是 utterance评论系统，也就是只要有Github就可以评论。 首先新建一个仓库，名字什么的都无所谓，只要是 Public就行。 安装utterance app。链接 配置主题文件内容。 重新 hexo g -d应该就能看到评论区。"},{"title":"Hexo + Github Pages","date":"2024-09-09T14:03:38.000Z","url":"/SeverusBlog/2024/09/09/Hexo-Github-Page/","tags":[["博客搭建","/SeverusBlog/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"]],"categories":[[" ",""]],"content":"本来我打算租用一个服务器来部署这个博客网站的，偶然间发现可以使用Github的Pages服务来进行部署。无论从经济还是实用性的角度感觉都更加优秀。 建立仓库注册Github和SSH本地连接的部分就不详细介绍了， 直接从建立仓库开始说起。 建立仓库的界面如下，创建什么仓库名并不重要。可以选择初始化仓库生成一个README文件。 点击 Create repository后就创建完了。 我们需要创建的是一个Github Pages仓库，现在打开仓库的Settings中的Pages，进行如下设置，注意点击Save保存。 出现这样的界面说明已经设置好了。 访问上面框中的网址就能访问你创建的网页了，比如这里创建个新的 index.html，随便输入点内容就可以访问试试看。 配置Git用户名和邮箱一般来说都配置好了，所以下面只放命令（在Git Bash中输入） 把本地Hexo博客发布到Github Pages上首先安装插件 hexo-deployer-git。也可以用cnpm下载。 接下来要把本地目录和Github关联，也就是进行SSH连接，但SSH连接早在很久之前就完成过了，因此不再赘述。 我们直接打开hexo配置文件配置相关内容。这里我修改了一下仓库名，没有什么影响。 然后我们拉到最底下，进行deploy设置。 这个repo可以直接复制这里的链接： 现在已经配置好了，输入下面的命令后访问网页看看是否成功。 搭建成功，当然也可以从另外一个分支构建然后在主页加一个 README.md。"},{"title":"Hexo图片插入","date":"2024-09-08T15:06:50.000Z","url":"/SeverusBlog/2024/09/08/Hexo%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5/","tags":[["博客搭建","/SeverusBlog/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"]],"categories":[[" ",""]],"content":"在搭建完Hexo并写完第一篇博客之后，我发现一件郁闷的事，我插入的图片并没有成功显示。 你现在能看到这张图片当然是我已经解决了这个问题，下面就将介绍解决方法。 插入图片首先我们要知道为什么会这样，我习惯在VSCode中编写markdown文件，而VSCode会在你插入图片的时候自动将图片存放在markdown同目录的image&#x2F;markdown同名文件夹下，比如你创建了一个1.md并插入了2.png，那么2.png的存放路径就是 hexo/source/_poimage/1/2.png，但是hexo读取时只判断绝对路径，这样我插入的图片就没办法正常加载。 起初我想使用相对路径转换的插件，然而发现该插件已经失效了： 随后我查询官方的解决方案，遗憾的发现官方的文档似乎也没有更新，其解决方案也不可用： 不过其并非毫无价值，我们了解到，在生成网页时，hexo默认根目录为source文件夹，如果使用相对路径引用的方式，要频繁的修改图片路径，不符合我使用VSCode节省时间的目的，所以我给出一种解决方案，即直接将image文件夹复制到source文件夹下，这样，相对路径被解析成绝对路径时也能读取到对应的图片内容。同时VSCode和Hexo上都能显示正确的图片内容。坏处在于使用了双倍的存储空间和每次编辑结束时需要复制一遍文件，似乎这样并不符合简约的理念🤔。 😁😁如果真的需要每次都复制一次图片，那就没必要使用VSCode了，我在VSCode中使用Office Viewer(Markdown)这个插件来编写markdown文档，只需要在该插件扩展设置中将hexo这个工作区中特别设置image的存放地址，那么就可以实现无需任何额外操作的编辑和hexo显示了。虽然有点取巧，但是比起图床上传网络和使用网络地址，改变自己的编辑器还是简单些，也更方便我管理。"},{"title":"Hexo博客搭建","date":"2024-09-08T14:21:14.000Z","url":"/SeverusBlog/2024/09/08/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/","tags":[["博客搭建","/SeverusBlog/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"]],"categories":[[" ",""]],"content":"今天心血来潮想搭建一个个人博客，将自己在技术学习过程中的经历与遇到的小问题都记录在博客上，博客先部署在主机上，之后会部署到服务器中。既然搭建了博客，第一篇文章不妨就记录一下这个Hexo博客的搭建过程吧。 环境配置Hexo的环境其实很简单，安装了 Git和 Node.js基础环境就安装好了。在Windows环境下都是去官网下载安装即可。 输入 git -v、node -v和 npm -v即可检查是否安装成功。 安装Hexo这一步更简单，只要在命令行中输入下面的命令即可安装： 建站输入下面命令初始化Hexo： 输入下面命令启动Hexo： 这样就可以从我们本地的4000端口上访问了，如果你有公网IP，也可以从公网IP的端口访问，像我一样没有的话可以租用云服务器或者是用内网穿透服务来从公网访问。 当然默认的主题并不是这个样子，因此下面顺便介绍一下怎么切换主题。 更换主题打开 ，这是Hexo官方的主题收录站，我就是从这里找到的目前正在使用的主题Cards。当然直接在Github上搜索Hexo也能搜到不少定制的主题。 我个人更喜欢极简的风格，所以选择Cards作为示例。 简单的来说，你只需要在博客的根目录输入下面这条Git命令就可以安装主题了： 当然你需要把_config.yml中的主题名更换一下。 博客的标题和一些其他配置都可以到主题的配置文件中去修改： 接下来重新启动Hexo即可。 如果恰好遇上了无法 git clone的问题，可以直接下载压缩包并解压到themes文件夹中，记得重命名文件夹名称。"},{"title":"tags","date":"2024-09-08T12:54:51.000Z","url":"/SeverusBlog/tags/index.html","categories":[[" ",""]]},{"title":"search","date":"2024-09-08T17:31:25.000Z","url":"/SeverusBlog/search/index.html","categories":[[" ",""]]}]